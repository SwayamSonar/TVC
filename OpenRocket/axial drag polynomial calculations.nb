(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    194636,       4008]
NotebookOptionsPosition[    193637,       3983]
NotebookOutlinePosition[    193972,       3998]
CellTagsIndexPosition[    193929,       3995]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
inverse of {{0, 0, 0, 1}, {(17/180*pi)^3, (17/180*pi)^2, (17/180*pi), 1},{ 0 \
,0, 1, 0}, {3(17/180*pi)^2, 2(17/180*pi), 1, 0}} *  {{1},{1.3},{0},{0}}\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.783523638216156*^9, 3.78352370495494*^9}, {
   3.783523745330269*^9, 3.783523814406384*^9}, {3.783523856715012*^9, 
   3.783523856904654*^9}, {3.783523943319846*^9, 3.783524006753851*^9}, {
   3.783524085088173*^9, 3.7835242419281683`*^9}, 3.783524624809601*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"f1502f1d-18a2-4cbe-ba26-08ba68712bd7"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "inverse of {{0, 0, 0, 1}, {(17/180*pi)^3, (17/180*pi)^2, (17/180*pi), \
1},{ 0 ,0, 1, 0}, {3(17/180*pi)^2, 2(17/180*pi), 1, 0}} *  \
{{1},{1.3},{0},{0}}", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Inverse[{{0, 0, 0, 1}, {((17/180) Pi)^3, ((17/180) Pi)^2, (17/180) \
Pi, 1}, {0, 0, 1, 0}, {3 ((17/180) Pi)^2, 2 ((17/180) Pi), 1, 0}}] . {{1}, \
{1.3}, {0}, {0}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               TemplateBox[{
                 RowBox[{"(", "\[NoBreak]", 
                   GridBox[{{"0", "0", "0", "1"}, {
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["17", "180"], " ", "\[Pi]"}], ")"}], "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["17", "180"], " ", "\[Pi]"}], ")"}], "2"], 
                    RowBox[{
                    FractionBox["17", "180"], " ", "\[Pi]"}], "1"}, {
                    "0", "0", "1", "0"}, {
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["17", "180"], " ", "\[Pi]"}], ")"}], "2"]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["17", "180"], " ", "\[Pi]"}], ")"}]}], "1", 
                    "0"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center], 
                   "\[NoBreak]", ")"}]}, "Inverse", SyntaxForm -> 
                SuperscriptBox], ".", 
               RowBox[{"(", "\[NoBreak]", 
                 
                 GridBox[{{"1"}, {"1.3`"}, {"0"}, {"0"}}, RowSpacings -> 1, 
                  ColumnSpacings -> 1, RowAlignments -> Baseline, 
                  ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Simplification", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"(", "\[NoBreak]", 
               GridBox[{{
                  RowBox[{"-", "22.97060233841883`"}]}, {
                 "10.223272370278792`"}, {"0"}, {"1"}}, RowSpacings -> 1, 
                ColumnSpacings -> 1, RowAlignments -> Baseline, 
                ColumnAlignments -> Center], "\[NoBreak]", ")"}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Inverse[{{0, 0, 0, 1}, {((17/180) Pi)^3, ((17/180) Pi)^2, (17/180) \
Pi, 1}, {0, 0, 1, 0}, {3 ((17/180) Pi)^2, 2 ((17/180) Pi), 1, 0}}] . {{1}, \
{1.3}, {0}, {0}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TemplateBox[{
                RowBox[{"(", "\[NoBreak]", 
                  GridBox[{{"0", "0", "0", "1"}, {
                    RowBox[{
                    FractionBox["4913", "5832000"], " ", 
                    SuperscriptBox["\[Pi]", "3"]}], 
                    RowBox[{
                    FractionBox["289", "32400"], " ", 
                    SuperscriptBox["\[Pi]", "2"]}], 
                    RowBox[{
                    FractionBox["17", "180"], " ", "\[Pi]"}], "1"}, {
                    "0", "0", "1", "0"}, {
                    FractionBox[
                    RowBox[{"289", " ", 
                    SuperscriptBox["\[Pi]", "2"]}], "10800"], 
                    FractionBox[
                    RowBox[{"17", " ", "\[Pi]"}], "90"], "1", "0"}}, 
                   RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                   Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
                  ")"}]}, "Inverse", SyntaxForm -> SuperscriptBox], ".", 
              RowBox[{"(", "\[NoBreak]", 
                
                GridBox[{{"1"}, {"1.3`"}, {"0"}, {"0"}}, RowSpacings -> 1, 
                 ColumnSpacings -> 1, RowAlignments -> Baseline, 
                 ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Apart[{{-22.9706}, {10.2233}, {0}, {1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"(", "\[NoBreak]", 
               GridBox[{{
                  RowBox[{"-", "22.97060233841883`"}]}, {
                 "10.223272370278792`"}, {"0"}, {"1"}}, RowSpacings -> 1, 
                ColumnSpacings -> 1, RowAlignments -> Baseline, 
                ColumnAlignments -> Center], "\[NoBreak]", ")"}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, AutoStyleOptions -> 
          {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "AlternateForm__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Dimensions", "scanner" -> "List", "id" -> "Dimensions",
      "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Dimensions[{{-22.9706}, {10.2233}, {0.}, {1.}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"4", 
              StyleBox["\" (rows)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{"\" \[Times] \"", "1"}, "RowDefault"], 
              StyleBox["\" (columns)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Transposed matrix plot", "scanner" -> "List", "id" -> 
     "MatrixPlot", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"MatrixPlot[{{-22.9706}, {10.2233}, {0.}, {1.}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[
             
             RasterBox[{{{0.26048676279850463`, 0.13684290836957352`, 
              0.8915693904020753}, {0.9792711843671822, 0.4501732443415399, 
              0.0010320275061212964`}, {1., 1., 1.}, {0.9098904612034818, 
              0.7759440049615408, 0.433923845176048}}}, {{0, 0}, {4, 1}}, {0, 
              1}], AxesStyle -> Directive[
               AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True,
              FrameLabel -> {None, None}, FrameStyle -> Directive[
               AbsoluteThickness[0.2]], FrameTicks -> {{{{0.5, 
                  FormBox["1", TraditionalForm]}}, {{0.5, 
                  FormBox["1", TraditionalForm]}}}, {{{0.5, 
                  FormBox["1", TraditionalForm]}, {1.5, 
                  FormBox["2", TraditionalForm]}, {2.5, 
                  FormBox["3", TraditionalForm]}, {3.5, 
                  FormBox["4", TraditionalForm]}}, {{0.5, 
                  FormBox["1", TraditionalForm]}, {1.5, 
                  FormBox["2", TraditionalForm]}, {2.5, 
                  FormBox["3", TraditionalForm]}, {3.5, 
                  FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
             Automatic, ImageSize -> NCache[
               Rational[250, 3], 83.33333333333333], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,moutput,computabledata,formatteddata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Matrix rank", "scanner" -> "List", "id" -> 
     "MatrixRank", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"MatrixRank[{{-22.9706}, {10.2233}, {0.}, {1.}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["1", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "MatrixRank__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Nullity", "scanner" -> "List", "id" -> "MatrixNullity",
      "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Last[Dimensions[{{-22.9706}, {10.2233}, {0.}, {1.}}]] - \
MatrixRank[{{-22.9706}, {10.2233}, {0.}, {1.}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["0", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "MatrixNullity__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.491", 
    "parsetiming" -> "2.583", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP85313c23622hc9hd6c000005ge72hd57bad1dcf", "host" -> 
    "https://www5b.wolframalpha.com", "server" -> "53", "related" -> 
    "https://www5b.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa85413c23622hc9hd6c0000038df6ag4g1c96gd06807070643161599741", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 0., 
    "Date" -> {2019, 11, 23, 18, 57, 26.58505`8.17721246352142}, "Line" -> 13,
     "SessionID" -> 33191877818596617725}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "inverse of {{0, 0, 0, 1}, {(17/180*pi)^3, (17/180*pi)^2, (17/180*pi), \
1},{ 0 ,0, 1, 0}, {3(17/180*pi)^2, 2(17/180*pi), 1, 0}} *  \
{{1},{1.3},{0},{0}}"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{736., {401., 407.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.783524246759962*^9},ExpressionUUID->"1ada0392-0c79-4e33-9d6f-\
7f1f2759d46f"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.783524105233058*^9},ExpressionUUID->"99e0be0f-e784-4c1d-9648-\
de94dfbb9f38"],

Cell[CellGroupData[{

Cell["\<\
{-22.9706, 10.2233, 0, 1}  * {x^3, x^2 , x, 1} ,x =0.063816218769921
\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.7835247508633423`*^9, 3.783524755247982*^9}, {
  3.78352483896497*^9, 3.783524992518614*^9}, {3.783525049244851*^9, 
  3.783525264679514*^9}, {3.7835253057893057`*^9, 3.783525380337782*^9}, {
  3.7835254866889153`*^9, 3.783525550203093*^9}, {3.783525621498726*^9, 
  3.783525672763175*^9}, {3.783525775140587*^9, 3.783525812396089*^9}, {
  3.783525880732686*^9, 3.7835259325000563`*^9}, {3.78352597058914*^9, 
  3.783526008472376*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"82ad739a-7450-4603-85ee-9be3eb696785"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "{-22.9706, 10.2233, 0, 1}  * {x^3, x^2 , x, 1} ,x =0.063816218769921", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Reduce", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "{{-22.9706, 10.2233, 0, 1} . {x^3, x^2, x, 1}, x == \
0.063816218769921}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "22.9706000000000010175`6."}], ",", 
                    "10.223300000000000054`6.009491105236773", ",", "0", ",", 
                    "1"}], "}"}], ".", 
                  RowBox[{"{", 
                    RowBox[{
                    SuperscriptBox["x", "3"], ",", 
                    SuperscriptBox["x", "2"], ",", "x", ",", "1"}], "}"}]}], 
                HoldForm], 
               StyleBox["\" where \"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               RowBox[{"x", "\[LongEqual]", "0.063816218769921`14.01"}]}, 
              "RowDefault"], PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Reduce", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox["1.0356646100206461`", Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Vector length", "scanner" -> "List", "id" -> 
     "VectorLength", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Norm[{1 + 10.2233 x^2 - 22.9706 x^3, x == 0.063816218769921}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            SqrtBox[
             RowBox[{
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"x", "\[LongEqual]", 
                    TagBox["0.063816218769921`14.01", Identity]}]}, "Abs"], 
                "2"], "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{
                    RowBox[{
                    RowBox[{"-", "22.9706`"}], " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"10.2233`", " ", 
                    SuperscriptBox["x", "2"]}], "+", "1"}]}, "Abs"], "2"]}]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "abs(z) is the absolute value of z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.294", 
    "parsetiming" -> "0.866", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP16731ba834he0d38ffei000061e6b13a58e1586c", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "14", "related" -> 
    "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa16741ba834he0d38ffei00003c86c8f76b5iffgi9125245285920578042", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 0., 
    "Date" -> {2019, 11, 23, 19, 25, 35.784404`8.306268767918716}, "Line" -> 
    54, "SessionID" -> 33191877818596617725}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "{-22.9706, 10.2233, 0, 1}  * {x^3, x^2 , x, 1} ,x =0.063816218769921"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{736., {123., 129.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.78352593585404*^9},ExpressionUUID->"6fa351e2-7ba5-49d9-b1ae-672b41590fde"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
inverse of {{(17/180*pi)^4, (17/180*pi)^3, (17/180*pi)^2, (17/180*pi), \
1},{(pi/2)^4, (pi/2)^3, (pi/2)^2, pi/2, 1}, {4(17/180*pi)^2, 3(17/180*pi)^2, \
2(17/180*pi), 1, 0}, {4(pi/2)^3, 3(pi/2)^2, pi, 1, 0}, {12(pi/2)^2, 3pi, 2, \
0, 0} *  {{1.3},{0},{0},{0},{0}}\
\>", "WolframAlphaLong",
 CellChangeTimes->{
  3.783526741654029*^9, 3.783527623605258*^9, {3.783527771741085*^9, 
   3.783527780229292*^9}, {3.7835288499733553`*^9, 3.783529090668351*^9}, {
   3.783530457669194*^9, 
   3.783530460268003*^9}},ExpressionUUID->"a3c55bd6-7b39-4671-b806-\
a1a624e1a989"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "inverse of {{(17/180*pi)^4, (17/180*pi)^3, (17/180*pi)^2, (17/180*pi), \
1},{(pi/2)^4, (pi/2)^3, (pi/2)^2, pi/2, 1}, {4(17/180*pi)^2, 3(17/180*pi)^2, \
2(17/180*pi), 1, 0}, {4(pi/2)^3, 3(pi/2)^2, pi, 1, 0}, {12(pi/2)^2, 3pi, 2, \
0, 0} *  {{1.3},{0},{0},{0},{0}}", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Word\", \"inverse\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"inverse\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {WordData, "inverse"}]], Identity], "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"English word\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definitions", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \"Definitions\
\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox["1", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"adjective\"", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"reversed (turned backward) in order or nature or \
effect\"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}]}, {
                
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox["2", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"adjective\"", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"opposite in nature or effect or relation to another \
quantity \"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox["3", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"something inverted in sequence or character or effect\"", \
{LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {
                "Columns" -> None, "Rows" -> {{True}}, 
                 "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
               GridBoxItemSize -> {"Columns" -> {
                   Scaled[0.045], Automatic, Automatic}}, 
               GridBoxSpacings -> {
                "Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "American pronunciation", "scanner" -> "Data", "id" -> 
     "Pronunciation:WordData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"Pronunciation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\",inv'ers\"", {
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{
                    StyleBox[
                    "\"IPA\"", {FontFamily -> "Helvetica", FontSize -> 9, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\": \"", "\"\:02cc\:026anv\:02c8\:025ds\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Hyphenation", "scanner" -> "Data", "id" -> 
     "Hyphenation:WordData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \"Hyphenation\
\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              TemplateBox[{
                StyleBox[
                 RowBox[{"\"in\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], "\"verse\""}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0, 
                 ZeroWidthTimes -> True]}, "RowDefault"], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"letters\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox[
                    StyleBox[
                    "\"  | \"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                    True], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"syllables\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowWithSeparators"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "First known use in English", "scanner" -> "Data", "id" -> 
     "FirstRecordYear:WordData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"HistoricalPeriodData"}], "\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              FormBox[
               TagBox["\"1440\"", Identity], TraditionalForm], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox["\"Late Middle ages\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {HistoricalPeriodData, "LateMiddleAges"}]], 
                    Identity], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", "\" | \""}], AutoSpacing -> True], 
                    TagBox[
                    TagBox["\"European Renaissance\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    HistoricalPeriodData, "EuropeanRenaissance"}]], 
                    Identity]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                  LineIndent -> 0], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["579", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" ago\""}, "RowDefault"], 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowWithSeparators"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Word origin", "scanner" -> "Data", "id" -> 
     "LanguageOrigin:WordData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"LanguageOrigin\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"Latin\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {LanguageData, "Latin"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Word frequency history", "scanner" -> "Data", "id" -> 
     "BookMatchFrequency:WordData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1:eJxNmnc41e//x61sEipkJbJy7PkxzhEyS0ZGJasimcnKShmR7JFdEdl77x2S
lRXZIZRRQuT36Xd9P/er/ul6XHUd7/F8PZ73fR+nze11bhLg4eExE+Lh/fk7
cznamuEKcTPe//687T9SkCACbJBuU85OCVxC5fVAdOkI4mM+Otl7rcDj48yJ
bSnAju8i1VgeAN/LPqhy0wN2CzsXHYQBVqcgOcdFARzkOOzfNk+EOMrucvJm
I/CLe+GsQ8nATBatZlWuwGbLr8z59YDpjN24XggAdwzQ6HSTAKvN6sn6zRMi
lpwIXZKtB96866TzOAGYcUnD+/09YEWbZbr3WsBS/iK3r/IBJzxx8FwhBO7i
NL5EOk2AeL+D5OlYLfBz/ezg/FhgIo8dFZp7wONB/7Td1wQuSVXMCzsLbKT1
Q0eCENhmIal6egIfnjf9+tTJKuBzGiT2hLHA7nfpGjftgaM5u3vtNIGZOlxT
v3IB2+H1CfzCB27FrXLVfsJDHGB7MOVbCXxcqNpgIBqYZtImgtsOmCpyRkxY
FXhkkiC2gxOYiUfEqWX/sOk/Pt1cJnqsDFjgblNnhx0wzUr5jD8H8LM4Qpfr
H38jnmOQeSb7DFg2e8f9sSKwkDX1zMKvA8T7+1Q9FwuALeotRfpvA7/Qy2C+
ygQ8t2c7rtW7j7ixN5TOOBD4vmtcn60McJvWDmni5q8mRqIr1ALFbQqMYjP0
wrnASt9K0ntvAJOPThb4MwBnxmzIK3XvIVazCH1h4wMcYOLrkysFnIC5PvN9
ZRf+/7mI+ivpu+h6DqS17E+bAAcxb73aOgacf25dd6prB3HOsZHAAS/g85zH
JafEgadUPlbpffuJWFc+pLH/JbC5RaSi1dWfTXMZia3shV0KqtcfqRJTA4vc
3j9N1byNuCKlx0XgATB9TsAlfQww5ULcq9jPPxCTCgp3Y9OAP2qVumzqAqsl
PEuuo/zRtMddaXj50RuFsBod1fCG74jHVlPau+8B12soNrILAHv4vJfzmt5C
3D9dIrEVDyygw044oANsGu+iW0kMjKHkZKts2GzyUePT7cH5Kgzq1dg1OAHT
db+RnuYDNrzMPmo9v4HYOdd3by8OmF9cKj5DG7gqcqzKgBBYA4+wwKliHbFb
4iO2TIf1Jumk3Q/M7EEKXhRf6ebOAEvr3CBxrPyG+GHeZugaP7BbsRGze9RX
xBm09i8kjwD7MhtijtisIbZUuWyePriK2Lt756mLCrDK3r0Gg7yVJpnIbh/V
hjoFpcfJSzaswBsVCYxhj74gzqTI2ni0sow4qtqiMec6sADdVuxsyxLig3Yh
S00x4OEE79HAzEXEJgxpegPUi03cwqS5zMabCswb9h2XfD8jDrpHpzixsID4
4HiHhcxF4Cw6Xs/uxnnE+DUmSTbcwOF1iiXy8XOIeaYlHOcogO1zf0vE3Ztt
SmMSnOQk3lVYHXTe8lqYQXwyo77ingawW3+5U1LNNOJZloahWAzwD24JLyz/
VJPkE5zpQt+eQmSXunwV1SfETxuJj2qPTiCO354VCM76iJhm7pQMX+h4U0Pq
nw/cUVjg2NdfMhpDfJZR+gblP6OI3S7Flg+eHmm6H8Xwr2HwsdxjCSxV6x8Q
KzLuOxINDSGuziUatk0dbPo95LZ8VpgQq+QrEOThMIBYhryEe02/v0lB3KRa
jZIYG7o4Nex1pg9x/PbA5yXyXsR9rWIKtKndTT53ap2jGIix/HQjon7ybxFf
7xUhrCfuaOrQ+HOHR7BqQpMb4qmtiKkOsTXups1N5COvHOTICbHftRbYiQQa
EfMHFmrERNU0bQ5omdMYEmLZNMkoqlkrEAeYHJIaqBc3WUeseSqIE2OtZle9
CRhzEHPWNF4JwL5s+nO1BPxE2GfXUwx+XI743/MgwGJD+Y7eHFXE/ccXjoS2
q3BF4k6O9f7UnSPEnms8XvY9/iViXfXDxBOeOTibP7dHhId9yzxCwBlWjJgj
WsCnQK0C9+/FSZd2EmK7hY+pvCquQYzXxH87TK4R5yj35w6JsIqeMdr47s2I
u8ILmSTnW3H/f/kmR7CCXCGqZ5U6ENdp5iaqPXiLe9fz5w8JNuKd93uh2W7E
oTNxPJrsvTjFf9PE8ZEEWyJT6RTO24dYUdiracK4H7f0683GgBYF9qbjAkeL
6wBifpPXziG5g//7PCrsFPkFt8KPQ4i58UOe2W9/wP07PJb/TFFjadO5Y2h4
RxBHhN/O17gwivv3Zl3q2Y5jf8sGus/dGEN8NPZQ7Hr4OO50oZNVhC09tkTq
FKFj7kfEvwLDmm5NT+AexpwPubt4CjvCnhm5fTiJy/nz+TfYsC/cU47PMU4h
DlRwbR3lmsbt/7n8WUYsyaIDSWgp8Nh8rKLIpRnc/8fx8Snsy+bc4SOLwOLK
9M6vnWdxr//UkxMzlok1i0yKeg7x28TQrNjkOVz+hRkP+nwWrP2uedoZvnnE
t/Isw180z+NWL1ey+uewY7mJK5+sai8glimTfMCzsoCT+jPf4aexSkqZbZF+
n3E6//7zSj8rlsHNirHr6CJieYIrNzezFnF2tI8au06zYTHCMdWLkku4P+m6
8owZa1+OR9o7AEyRoXvC13IZceV1radGSrC/YHpFuzlnCuuf5NmOu49P7KP1
yLfGVepb72F9E95uV6hNC+sXJ4Gf77k6YT1yRvTbCdmHwM8VReXo3sL6Yrzv
GT6LD6wn9KeDlSvEgJ3qN9MYPWA9QOt8mtxQCHg1e33z7Gfo+ws6WtJSc5uI
fQu/tf/zHPp5Vuv8ImU09KvHYCWjsjr06QZphitVKPTdrLnE2cVd6DflBtKh
mZvAXwoNWL+sQT8lGIWdELgK/VRHREod0QH9NNErS3tMB/pEs51Jr64B+gTT
KB0TfA4472f1K8b70BcTwsZ0kq1TiJXcGyc9k6AvIj86s9pioS+G7h6KjjNB
X+wRUKo+2YJ+IE5JMPbogn64VLpI7pA/glg7muGOypNh1Adi7t0dJubQF7/N
8TirpIdQH/icYBT8TgJ9oaC8PiI614943k3Np6wW+qF0kjDqYKgH+f/3ir90
l10X4tb1x6fSODoR6x4G7u0OtKE+yDkZNjzi04LY9yzd13qVJtQHwRF17b3b
dcj/GcvXcriNqhDr6BMFB5WWIq5+f191dLgA9UF77/Cd1tzXqA9WlsMIHi4n
IOYk4xIUqfFF/VBkRPyNrNYP9UOf4jWG+JxE1AdY/+Asf/JM5P9dU5usuLOF
iF0MCZqsV0uR/7fNU815vasQfzYSI585UY/4Rcr0VdWrTagPAohfiSfltyDe
H08uwtC3oz7Yrjy1WXGjEzF3aIx4XX4X6oMwAwpPefx3iD34iQLLpd+jPtgr
Y0qQaIZ+0LssvHlpGfqhc7FNg5t2ELF/qcs2ixL0ASGxNSGNNfRBks7Yscaw
YcQ6CR2nMZUjyP+dt35GxQ1CPwRYnzdg3xlD/je7TcV8mxX6wMBUf9ZGBfrA
Wu9UNsZhErHsO46h1aefUB8Yeqpc6iqGfrhA931BxBb6YH2BMGMKfwZx/eAL
SuZE6IPVR6ZcwwLQB1nCn+Ttm4A3J5iMFvWhD5LU3Tgn54DvDFrEm7tAH7Qb
UVN1kEEfFE66+pGnQB80eNqnTUp8Roz5FGiPeQv9wC93Q8HkGvRB+fMfR23X
gXu31GeM/aEP6gT4jmaegj4oPLOxJ6UFfbAm1UfA5gx9QJZXwOrOA31AjMk2
pBoHv5cLNt55GwlcqxT4S3QCfB9LQmX2Mxx4e/oOlksRfK73w0xl5zv4+wT3
me6GDPC1UFzcGIZ9FflWai/A1fgh+FZmMMu8b2EWsdUpCUEjUvBnufCGULEZ
+LD6Fo14/XfwHbv8765PAeCz5llqoRFeWO+evbMiu2X/DvlrBz+fO6IQ/LR3
RmI+4CisV6tOKD224WlAPqrsC1B/sVyGfBM3OuM8N5uFfMJUSDqqUpaK2J9g
VyF8+R7ySTlHH6auPx35JK16daa9rgT5Y7SNg6d5vhb5wRLH3NJLBz6gtddl
+dYP68Nw2raMCsceNO9X3KwD5u7DfMfm6kv+aIX1niPpqJwpxwc0zyKprldT
HWA9p6h7cwk/F+bTX7PSyW73I5o/EbsPZeo8MI/7Hk7FV27B/Hnekrki8RHm
78Ir4t+25LNo3gK8zIqOisB66+4tC+bz2jA/qxsnAx64wrzsxw9SER6DeXk5
bnGOXgLWT3vvMqoLemA+VKn0Z7K0IO/CDNPVYUSQ90/nlC7Il0O+XbBT3ptl
kGfWBJqXirawfsGQjA4Gs8L5hUyB1Dm3fsh3nrMFobEf5Dsa88EpdRDWF/uV
cWWHYpBvk6qnytnPYX2wdE61s8YV9o+bmVSSBEPjiOfxG6ZPW8F+byKQwCtq
Ffq5NrPfJzwJ+lnxMvMyiQz0cfjU1aMF0R2Ir1EsdfKsN6N8G1NKkom01aI8
r449fGvvU4L680drt2mGSzrKc+2ZkwI1LLGoL9lFaOo1HoWgfHctKnFcPP8G
5Vlz+2Qa5alylOetNeXVQ9UGlOesbt4sazXY/4wTzLf7rnWiPD9LuqzTFv4O
5TllqzvvCTX01R6HhKnRDdi/xBDudTYUQD85xZxcqj2EPuryOd0urwT7EV7n
zcvWUdA3aTJmKbSVsP8o8WJalTucQnm2vPluK4gH+iTcslpT/jL0hYnsEF6D
O/SDFdaS3i8J8n3/7Yj381bIt58phWjlNfB/aaqxTpYf5NnppvJNPvolxLnE
54uzLoPfhwkFQ2q9IO8Kka9c7wlD3rXzCVnw5+A8Ei8/iz48EfLfq1xk3LoA
+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
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{751, 670, 738, 543, 623, 395, 491, 66, 205, 
                    65, 64, 63, 62, 61, 60, 204, 59, 347, 203, 443, 300, 542, 
                    394, 645, 490}}], 
                    PolygonBox[CompressedData["
1:eJwl1nf8jlUYgPGfLVuyW1Zplx1ZFbKyR2ULkexNyIiys1cShVBGKJW9GzLL
yIjMCFlJ9L0//rg+13nuc5/zjHPO/b65mrWv2S5xQkJCInTXKIp7kyQkbHH9
iOBmzs+bOKf4Ev3nURmDcFLffTyEV+JhvIKN8t/lh1BW/3ZOZ/xE7SPIhFao
L/4RNsjPx+v5BA9GZvlz4x4ogl74WjwF5+V6WCd/EOfBT6gb8+nPj5vohB8w
Q/wq1srPzWt4IOfCj6gTzy7vQ07pvsO09+FK3IdXy39QexUP4AfwuXgZJJHf
n3fFvcTv5to8Hd/Jv5+/5XfiW6G0/u85rXETtA8jI1qilvg0fCP/3vimXEn8
j5gv1gb/IhZtG/qLf4WcqImv5eeIGB/nfrjHfebIPYHC6IkV4sk5O9fACvnZ
eDkf4774VH+h2BzG9+CfsVw8GWfl6lim+23Ogm2oFmuufyq/z5f5ItfFSnwp
P7PYUu4Tz4ateBn59E/h9/hvvsB1Ys2xRH4mscXcO74xSolv4TSeb7z2IWRA
C1QVn4xF8jPyF9yLM6Ck/s08jtPjKl7HBlQRnxRrKz89L+TfuSc+0V8QtxPf
OSvbsUw8KafjylggPy3P56PcA7P1F8AtdMNP8R3Ek3AaroTP5KfmeXyEu+MZ
/Us5lfcbo30AidEEqcQrYq78u3gOH+ZueDq+F4/mRLGH0RhrkVL8pVhb+Sni
nfgQd8VT+hfzqFjzWDs0whokF68Q76IrGc/i37gLntS/iEfGt+G/uWGcGSR1
XR4fxzbimdyZEyO791oo5yyeQz9sijrB5XhinOWoTTyDOyW6U6iyGbdAzhmU
QF9sjPPEL/IEfCj1NqajovhBsfTGTdM+ipx4Cx1jb+CWvBfi7PF/mIoDrjsg
k3Gz4gziCXTF5zEGN+U9z1O4Pf/LG7gs8sobzymMH6r9Ky65rs2T5d3AJOwX
a4fHxRfyCP6PL3EDrMI/8srEN+HrmIC3XF/jrOafL+c0iuNtrI9zwaVjn2O8
vKsYh5eitolN5Ry4gbbYGo49jCvySvFYvowPUCHeId416kY8E96MMxiOPR9r
L68kj+FLGI02UQP4WXnrtFN73rHavyE1msf6x71i78kbiQsYEbVM7mL951Ae
A/FL7AFuHecGf8krwcP5PIbhDdfneC0XRx75H0TNM9+QmAMXXdfi9+X9ifdw
FkOxV1+r2Lf6H4v1QBf8iHmx7jgT78RD+HT83uEUBqOcvD1Rg6JW4jraRN1B
yzi3OCmvGA+K37z4PYrfFvwRvxXYra9F1DrPPNO443gUnTEn9hqOyyvK/aNu
ox/6Rk2OuhU1Fq/rP8qfGVcsaoj5+vDOONtRX7hIrBl6R/2JWome6BH/C9AN
XaPGoAuayz3Eq7kwMppzhnmOIXecK4wWv4DOUSvi/KIjOsRZQbvYwziItmgm
9wCv4kLIZY5RnMzc72rvxV+ua8Z+i3MTewutY73RCi3RIt4Z++I5sSjqQtQi
8wyIdcEu82ThplEL8au8gtyMm6IJGqMRGqIBfsFrUSfi28mdxJlxLfZi1K6o
zVFTsVdeAX6VX0F91ENd1EFt7EEt7JDXGI8YP5vv8pzDtffH2XT9Gu+W90y8
O+9CDVRHNbyMqqiCnagczy13B2cx1zzjT+F/C6lHTQ==
                    
                    "]]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1:eJwl13f8TmUYB+A3e++991YqNEjI3tJAVAihkLJSZojIiuyVTamszIqMiohk
RGZIGU2K1HV/+uP6fM+5n/uc33nf8zzPS+H2PR7uflsikcibNJGIXJUkkWjE
BSevU4bP1ZUSWhLJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkiWcg
H/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzluZ07qMCd3MXdVKQSlbmHe7mP1T5g
Y370eUdRli/UN6q15JrzebRmu/NnycY+59/IIdTkZ1Zyv2vXyCZc4aK+4XK0
LCDLyY18qe8JWUXupioPUI0HqU4N9lCTn/S+QQ/3KMhpZpPJyymvvtVxO1Kx
yflXrtnkuBXXnc+nDQ+pr1VrGs/sfAy3s1e9FrWpQ13qUZ91eptxSd9Y7mCf
+ma11vzl/B3a0kD9I7XmXHb+ZnxWxz0pRAXn22R7UnOMiWxW/1oO4Daf6Z6Y
iywlh/Ov3fdJPQ3lfhrRmCY0pRnNOcDD8e7j/cR37Pq/HR+VY+JvutcC56Ud
PxV/kxb6DvIIj/IYj9OSVrSOeaTvW7lQPs0O13eJ+UF2prI/vl/5hL5DtKFt
PDdP8TTtaB9zUu9huUi2I4frDsiDcijJPGct+T4d9B3hGTrSic48Sxe6cpRu
8dlj3sWzyhEkd59xzgs7rii38F08g3xOHuN5utODnrxAL47zIlf1jucF9yjC
GeaQ2b0rqX/M9/o6yJfkCXrTh770oz8vc5IBTNBbmTTu84ncL18hiXveK5dx
Kj6zsVfkaV5lIIM4w+BYy8bPyhtyMS+6rgxnmUcW9+sYc4Eh+n5gKMM4x2ux
Fxg7L5fITux0XddYN+RkGgfVa8vh+i4wgh8ZGfuIsYvyplzKHn0v8Q9lmU/n
eCext8ZaZhQ/M5oWxn8xdkiOJIVnnui8aOwn8lMuxfuOPUBeZgxVnF+Ry2QX
cuk/JIfJOrFe+YA87jc23iNvMo5J+qrSwXhajjMpjvVuVb8vninmVrx7+Wu8
s9ijnP8ml8tu7NLXLfYAcjOdw+p1Y13r+z3+FtXU/pArYt7Fb4vx52JtxvMx
gyPq9eRb+v5kMm+pPUg69W3y1fhOYr9mebwfz3st5rCxKfI6b1Pd+V9yi542
/BrvI/Yv+a4sJ+MH8ChT9f3NtNgDojfWpnydlO4/2XkxxzXkZ9yItSKny5ry
prwl36O3vvL8wDtkdX3PWHPM0PcPM3nI+S25MtYVz+vNG3OemWR03TH1+o5n
6fuX2UxRq0V69e1yoKzCRVaQK36s1XsxJw7l3PhOYv6SQc8OOUhW5af4PuLd
uS5JrB/m6U8avxmyjkwWa1xPW37j39jXY2+K346Y6/J4/AboTy4XyLoyBZ8Y
f5LfiX9MjIs5Gb8hsnfsGyw0lFIukvVkqpjzsT/zR/weMJ4P1SvIPvJErHf9
qeUSWT/2ktibYw/hOyaQxudapX6n477yZKxR/WnlMtkg5hZJja+WX8X9ucVd
LKCf+imW608vV8iG8V3Gd2N8jdwb94/vhrtZSH/107yrP2PMDzlVNop5ZPwZ
/ox3HXOeneoPyEzyZVbqzyzfj7kpG9MxxvmeyaTz+XapV4u9Tg7gA/1Z5Ydy
vfqjXI13pzYq1qgsLpvEOiRb7LGs0p9drpYbjD8We0C8O7XRsUZlCdlUfkGO
WI+s0d9M5iS58bVyX3xv8c49X0W5iIHqZ1irnEuuk81l7pgrxtfJ/rIS51hM
NtcPUj/LR/rzyPXxOyfzRo3B8TyxnrlBvlgzsQbVG8gN+vM53hhrT7agk3pm
TjCF9P7Ol7HXOM4vh7BJfwG5Wc6Sj5DF+G55QA4mqeuqy/coqD6ULfoLxZqR
j8ccdnxEvkEq/bOdl4z3IvdQmGGxVvQXibkf+1+sX3br68VNSjE33kvMU4ry
Glvj78hipDS+PuaPrMx5lpDd3x2ufo5t+ovHHJRzZUs6x17FSd4mg/696jUc
l5Aj2K6/VTw7GxhJ/vgb8RyyIZdjnSb5//8VO/SXMrZTlpa75H/yMoUv
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$1728944#1"]& ]}}], {}, {}}, {
               GridLines -> Dynamic[
                  Join[{{{-1.26227808*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-6.3113472*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {6.3114336*^9, 
                    GrayLevel[0.9]}}, {0, 2, 4, 6, 8, 10, 12}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2., 
                    FormBox[
                    TagBox["2", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {4., 
                    FormBox[
                    TagBox["4", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {6., 
                    FormBox[
                    TagBox["6", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {8., 
                    FormBox[
                    TagBox["8", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{-1.26227808*^10, 
                    FormBox["\"1500\"", TraditionalForm]}, {-9.4671072*^9, 
                    FormBox["\"1600\"", TraditionalForm]}, {-6.3113472*^9, 
                    FormBox["\"1700\"", TraditionalForm]}, {-3.1556736*^9, 
                    FormBox["\"1800\"", TraditionalForm]}, {0., 
                    FormBox["\"1900\"", TraditionalForm]}, {3.1556736*^9, 
                    FormBox["\"2000\"", TraditionalForm]}, {6.3114336*^9, 
                    FormBox["\"2100\"", TraditionalForm]}}, {{-1.26227808*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}, {-9.4671072*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}, {-6.3113472*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}, {-3.1556736*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm]}, {
                    0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm]}, {
                    3.1556736*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm]}, {
                    6.3114336*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, 
                GridLines -> {{{-1.26227808*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-6.3113472*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {6.3114336*^9, 
                    GrayLevel[0.9]}}, Automatic}, PlotRangePadding -> None, 
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {6.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {8.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {9.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {10.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {11.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-1.*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-7.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.25*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.2*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.15*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.1*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.05*^10, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-9.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-9.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-8.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-8.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-7.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-6.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-6.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.5*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}}, 
                GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 0.2, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> Scaled[0.75], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  PointSize[Medium], "PointSizeFunction" -> "SmallPointSize", 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{-1.1991715200000267`*^10, 
                  3.408134400000076*^9}, {0, 10.100450000000002`}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1540\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2008\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"in \"", "\"occurrences per million words per year\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "TimeSeriesPlot"}, {}], 
       "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Linear scale", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Linear scale", "input" -> 
           "BookMatchFrequency:WordData__Linear scale"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Log scale", "input" -> 
           "BookMatchFrequency:WordData__Log scale"}, {}]}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Binned", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Binned", "input" -> 
           "BookMatchFrequency:WordData__Binned"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Raw", "input" -> 
           "BookMatchFrequency:WordData__Raw"}, {}]}]}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "Word frequency history", "desc" -> 
         "based on a Google Books sample of one million books in English; \
Michel, J.-B., Y. K. Shen, A. P. Aiden, A. Veres, M. K. Gray, The Google \
Books Team, J. P. Pickett, D. Hoiberg, D. Clancy, P. Norvig, J. Orwant, S. \
Pinker, M. A. Nowak, and E. L. Aiden. \"Quantitative Analysis of Culture \
Using Millions of Digitized Books.\" Science 331 (2011)"}, {}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Inflected form", "scanner" -> "Data", "id" -> 
     "InflectedForms:WordData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"InflectedForms\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"inverses\"", {
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Synonyms", "scanner" -> "Data", "id" -> 
     "Synonyms:WordData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"SynonymsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"antithesis\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "antithesis"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"opposite\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "opposite"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"reverse\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "reverse"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show synonym network", "input" -> 
         "Synonyms:WordData__Show synonym network"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
        
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Synonyms:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Synonyms:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Antonym", "scanner" -> "Data", "id" -> 
     "Antonyms:WordData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"AntonymsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"direct\"", 
               $CellContext`TagBoxWrapper["Entity" -> {WordData, "direct"}]], 
              Identity], TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Narrower terms", "scanner" -> "Data", "id" -> 
     "Hyponym:WordData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"NarrowerTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"additive inverse\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "additive inverse"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"multiplicative inverse\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "multiplicative inverse"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"reciprocal\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "reciprocal"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Broader terms", "scanner" -> "Data", "id" -> 
     "Hypernym:WordData", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"BroaderTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"oppositeness\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "oppositeness"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"opposition\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "opposition"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Rhymes", "scanner" -> "Data", "id" -> "Rhyme:WordData",
      "position" -> "1300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"adverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "adverse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"averse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "averse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"coerce\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "coerce"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"curse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "curse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"disburse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "disburse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"disperse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "disperse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"diverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "diverse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"hearse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "hearse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"immerse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "immerse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"intersperse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "intersperse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"nurse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "nurse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"obverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "obverse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"perverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "perverse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"purse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "purse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"rehearse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "rehearse"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"\[Ellipsis]\""}], "   ", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{" ", "\"total:\"", "22"}, 
                    "RowWithSeparator"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                 LineIndent -> 0]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"based on typical American pronunciation\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "4", "value" -> "Sorted alphabetically", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Sorted alphabetically", "input" -> 
           "Rhyme:WordData__Sorted alphabetically"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by length", "input" -> 
           "Rhyme:WordData__Sorted by length"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by syllables", "input" -> 
           "Rhyme:WordData__Sorted by syllables"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by frequency", "input" -> 
           "Rhyme:WordData__Sorted by frequency"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Rhyme:WordData__More"}, {}]}]}], 
   Typeset`pod14$$ = XMLElement[
   "pod", {"title" -> "Lexically close words", "scanner" -> "Data", "id" -> 
     "LexicallyCloseWords:WordData", "position" -> "1400", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"adverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "adverse"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"converse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "converse"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"diverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "diverse"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"immerse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "immerse"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"obverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "obverse"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"reverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "reverse"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"universe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "universe"}]], Identity], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "7"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Up to 2-letter difference", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Up to 2-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 2-letter difference"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Up to 3-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 3-letter difference"}, \
{}]}]}]}], Typeset`pod15$$ = XMLElement[
   "pod", {"title" -> "Anagrams", "scanner" -> "Data", "id" -> 
     "Anagram:WordData", "position" -> "1500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              $CellContext`TagBoxWrapper[
              "Missing" -> "WordDataNotAvailable"]], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod16$$ = XMLElement[
   "pod", {"title" -> "Phrases", "scanner" -> "Data", "id" -> 
     "Phrase:WordData", "position" -> "1600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"Phrase\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"inverse cosecant\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse cosecant"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inverse cosine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse cosine"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inverse cotangent\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse cotangent"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inverse function\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse function"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inverse secant\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse secant"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inverse sine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse sine"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inverse tangent\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inverse tangent"}]], Identity], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "7"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod17$$ = XMLElement[
   "pod", {"title" -> "Translations", "scanner" -> "Data", "id" -> 
     "ManyTranslations:TranslationData", "position" -> "1700", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n    ", 
         XMLElement["microsource", {}, {"TranslationData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Spanish\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Spanish"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"inverso\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"TranslationData", {"Spanish", "inverso"}}]],
                     Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"general\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Portuguese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Portuguese"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"inverso\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Portuguese", "inverso"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"general\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Japanese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Japanese"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:9006\:6027\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:9006\:6027"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"prefix\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"French\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "French"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"inverse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"TranslationData", {"French", "inverse"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"general\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"German\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "German"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"umgekehrt\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "umgekehrt"}}]], Identity], 
                   "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"general\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              FrameStyle -> GrayLevel[0.92]], "Grid"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ManyTranslations:TranslationData__More"}, {}]}]}], Typeset`pod18$$ =
    XMLElement[
   "pod", {"title" -> "Other notable uses", "scanner" -> "Data", "id" -> 
     "Entities:WordData", "position" -> "1800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Internet domains"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"InternetData"}], "\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"inverse.org\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "inverse.org"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"inverse.info\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "inverse.info"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"inverse.biz\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "inverse.biz"}]], 
                 Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "15"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod19$$ = XMLElement[
   "pod", {"title" -> "Crossword puzzle clues", "scanner" -> "Data", "id" -> 
     "NYTCrosswordPuzzleClues:WordData", "position" -> "1900", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"XWordInfo"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"inverse\"][EntityProperty[\"Word\", \
\"NYTCrosswordPuzzleClues\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   StyleBox[
                   "\"2, to 1/2\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                   "\"Opposite\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                 LineIndent -> 0]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"based on all New York Times crossword puzzles 1994 to \
2009\"", "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod20$$ = XMLElement[
   "pod", {"title" -> "Scrabble score", "scanner" -> "Data", "id" -> 
     "ScrabbleScore:WordData", "position" -> "2000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10", "SRString" -> "10"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"International English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10", "SRString" -> "10"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"North American English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "inverse", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "3"}, {
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.inverse-_*Word-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.inverse-_*MathWorld-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "SoundCommandWord", "desc" -> " referring to sound input", 
          "input" -> "*C.inverse-_*SoundCommandWord-"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "inverse", "score" -> "0.02734375", "level" -> "low"}, {}]}], 
    XMLElement["sources", {"count" -> "19"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
BookDataSourceInformationNotes.html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
BridgeDataSourceInformationNotes.html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
CityDataSourceInformationNotes.html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
HistoricalPeriodDataSourceInformationNotes.html", "text" -> 
        "Historical period data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
LakeDataSourceInformationNotes.html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
LanguageDataSourceInformationNotes.html", "text" -> "Language data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
MovieDataSourceInformationNotes.html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
OceanDataSourceInformationNotes.html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
RiverDataSourceInformationNotes.html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
TranslationDataSourceInformationNotes.html", "text" -> 
        "Translation data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4f.wolframalpha.com/sources/\
WordDataSourceInformationNotes.html", "text" -> "Word data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "20", "datatypes" -> 
    "AdministrativeDivision,Book,Bridge,Building,City,Company,Country,\
GivenName,HistoricalPeriod,Internet,Lake,Language,Mountain,Movie,Ocean,River,\
Surname,Translation,Word", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "4.604", "parsetiming" -> "0.129", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP118912cif8i9839dgaa9000037de1ei6igh83516", "host" -> 
    "https://www4f.wolframalpha.com", "server" -> "13", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 0., 
    "Date" -> {2019, 11, 23, 20, 18, 16.922374`7.981036273923101}, "Line" -> 
    57, "SessionID" -> 33191877818596617725}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "inverse of {{(17/180*pi)^4, (17/180*pi)^3, (17/180*pi)^2, (17/180*pi), \
1},{(pi/2)^4, (pi/2)^3, (pi/2)^2, pi/2, 1}, {4(17/180*pi)^2, 3(17/180*pi)^2, \
2(17/180*pi), 1, 0}, {4(pi/2)^3, 3(pi/2)^2, pi, 1, 0}, {12(pi/2)^2, 3pi, 2, \
0, 0} *  {{1.3},{0},{0},{0},{0}}"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
         Typeset`pod20$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{736., {841., 847.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.783529097336648*^9},ExpressionUUID->"718d7b9e-4e2a-4a76-a3c5-\
4df19af158db"]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 462}, {30, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 550, 8, 50, "WolframAlphaLong",ExpressionUUID->"f1502f1d-18a2-4cbe-ba26-08ba68712bd7"],
Cell[1133, 32, 24205, 475, 818, "Print",ExpressionUUID->"1ada0392-0c79-4e33-9d6f-7f1f2759d46f"]
}, Open  ]],
Cell[25353, 510, 129, 3, 31, "Input",ExpressionUUID->"99e0be0f-e784-4c1d-9648-de94dfbb9f38"],
Cell[CellGroupData[{
Cell[25507, 517, 642, 11, 50, "WolframAlphaLong",ExpressionUUID->"82ad739a-7450-4603-85ee-9be3eb696785"],
Cell[26152, 530, 10486, 211, 262, "Print",ExpressionUUID->"6fa351e2-7ba5-49d9-b1ae-672b41590fde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36675, 746, 574, 11, 68, "WolframAlphaLong",ExpressionUUID->"a3c55bd6-7b39-4671-b806-a1a624e1a989"],
Cell[37252, 759, 156369, 3221, 1698, "Print",ExpressionUUID->"718d7b9e-4e2a-4a76-a3c5-4df19af158db"]
}, Open  ]]
}
]
*)

